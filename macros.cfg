[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".




# [gcode macro INITIALIZE_SAVED_VARS]
# description: Conditionally set default values for persistent varibles.
# gcode:



# [gcode macro INITIALIZE_VARIBLE]
# description: Set a PERSISTANT varible if it is currently undefined.
# gcode:
#   {% set FORCE = params.FORCE|default("false")|lower|string %}
#   {% set NAME = params.NAME|string %}
#   {% set VALUE = params.VALUE %}
#   {}



######################################################################
# Bed Drying after washing the surface,  heatup then cooldown
######################################################################

[delayed_gcode delay_heaters_off]
initial_duration: 60
gcode:
  TURN_OFF_HEATERS

[gcode_macro DRY_BED]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
  {% set TIME_SECONDS = params.TIME_SECONDS|default(240)|int %}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  UPDATE_DELAYED_GCODE ID=delay_heaters_off DURATION={TIME_SECONDS}

# [gcode_macro CUSTOM_BOOTSTRAP]
# description: This initialize some session varibles and will only run once unless FORCE = true
# # variable_initialized: "false"
# gcode:
#   # M117  Initializing...
#   {% set FORCE = params.FORCE|default("false")|lower|string %}
#   # {% set init = printer["gcode_macro CUSTOM_BOOTSTRAP"].initialized|default("false")|lower|string %}
#   # {% if FORCE == "true"  or init != "true" %}
#   {% if printer["gcode_macro CUSTOM_BOOTSTRAP"].initialized is undefined %}
#   M117  Initializing varibles
#   {% else %}
#   M117  second-run
#   {% endif %}
#   SET_GCODE_VARIABLE MACRO=CUSTOM_BOOTSTRAP VARIABLE=initialized VALUE={ "true" }


#https://github.com/Clank50AE/Clanks-Klipper-Configs/blob/master/SideWinder%20X1%20BLTouch%20E3D%20Hemera.cfg
[gcode_macro END_PRINT]
 gcode:
     # Turn off bed, extruder, and fan
     M140 S0
     M104 S0
     M106 S0
     # Move nozzle away from print while retracting
     G91
     G1 X-2 Y-2 E-3 F300
     # Raise nozzle by 10mm
     G1 Z30 F3000
     G90
     # Disable steppers
     M84
#PrusaSlicer endprint:
# {if max_layer_z < max_print_height}G1 Z{z_offset+min(max_layer_z+2, max_print_height)} F600 ; Move print head up{endif}
# G1 X5 Y{print_bed_max[1]*0.85} F{travel_speed*60} ; present print
# {if max_layer_z < max_print_height-10}G1 Z{z_offset+min(max_layer_z+70, max_print_height-10)} F600 ; Move print head further up{endif}
# {if max_layer_z < max_print_height*0.6}G1 Z{max_print_height*0.6} F600 ; Move print head further up{endif}
# M140 S0 ; turn off heatbed
# M104 S0 ; turn off temperature
# M107 ; turn off fan
# M84 X Y E ; disable motors

# ---------------------------- Cancel Print --------------------------

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  G91 # Set all axes to relative
  # G90 # Absolute positionning
  CANCEL_PRINT_BASE
  G1 Z10 # Raise Z more
  G1 X10 Y200 F2000 # Absolute xy
  # G1 X0 Y{machine_depth}
  M84 X Y E ; disable motors





# ---------------------------- Load Filament -------------------------
#https://github.com/BenD780x9/Klipper-for-Ender_3_v2/blob/main/Macros.cfg
[gcode_macro LOAD_FILAMENT]
# M701
gcode:
  SAVE_GCODE_STATE NAME=loading_filament
  M117 Loading Filament
  M83
  G92 E0.0
  LOW_TEMP_CHECK
  G1 E10 F300  # length of bowden tube till cold-end (~420mm)
  G1 E30 F100  # some extra to prime the nozzle --> slower
  G92 E0.0
  RESTORE_GCODE_STATE NAME=loading_filament

# --------------------------------------------------------------------

# ---------------------------- Unload Filament -----------------------
#https://github.com/BenD780x9/Klipper-for-Ender_3_v2/blob/main/Macros.cfg
[gcode_macro UNLOAD_FILAMENT]
# M702
gcode:
  SAVE_GCODE_STATE NAME=unloading_filament
  M125 # park
  M117 Unloading Filament
  LOW_TEMP_CHECK
  G91 # set relative
  G1 E10 F100
  G92 E0.0
  G1 E-20 F1000
  G1 E-30 F400 # the E is the length of the bowden tube (420mm) + 100 mm.
  G92 E0.0
  RESTORE_GCODE_STATE NAME=unloading_filament

# --------------------------------------------------------------------




# https://github.com/BenD780x9/Klipper-for-Ender_3_v2/blob/main/Macros.cfg
# ------------------------- Low Temp Check --------------------------
# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested!
# - If this setpoint is reached, continue.
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float}
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T_EXTRUDER %}  # heat to T.
            M118 No setpoint, heating to {T_EXTRUDER}.
            M109 S{T_EXTRUDER}
        {% endif %}
    {% endif %}



# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]



[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}



#https://github.com/dudeofawesome/klipper-config/blob/master/macros/nozzle_prime.cfg
[gcode_macro NOZZLE_PRIME_LINE]
description:
  Prime the nozzle by laying a strip of plastic along the left side of the bed
gcode:
  SAVE_GCODE_STATE NAME=nozzle_prime_state

  {% set pi = 3.1415926536 %}
  {% set nozzle_diam = printer.configfile.settings.extruder.nozzle_diameter %}
  # TODO: try reading the filament diameter from a sensor
  {% set filament_diam = printer.configfile.settings.extruder.filament_diameter %}
  # TODO: figure out how to recover if firmware retraction isn't defined
  {% set retract_len = printer.configfile.settings.firmware_retraction.retract_length %}
  {% set layer_height = 0.28 %}
  {% set line_width = nozzle_diam * 1.75 %}
  {% set x_start = printer.toolhead.axis_minimum.x + 5 %}
  {% set x_end = x_start + line_width %}
  {% set y_start = printer.toolhead.axis_minimum.y + 20 %}
  {% set y_end = y_start + 180 %}
  {% if y_end > printer.toolhead.axis_maximum.y - 20 %}
    {% set y_end = printer.toolhead.axis_maximum.y - 20 %}
  {% endif %}
  {% set y_diff = y_end - y_start %}
  {% set extrude_cross_section_area = (pi * ((layer_height / 2) ** 2)) + ((line_width - layer_height) * layer_height) %}
  {% set extrude_vol = y_diff * extrude_cross_section_area %}
  # TODO: figure out why my E math is wrong.
  # I'd expect E-vals to be 15, but I'm getting ~8.38
  {% set extrude_len = (extrude_vol * 1.75) / (pi * (filament_diam / 2) ** 2) %}
  ##### end of definitions #####

  G90 ;Absolute positionning
  M82 ;Absolute extrusion
  G92 E0 ;Reset extruder

  G1 Z5.0 F3000 ;Move Z axis up

  # TODO: consider priming along the front of the bed
  G1 X{x_start} Y{y_start} F5000.0 ;Move tool to XY pos
  G1 Z{layer_height} F5000.0 ;Move tool down
  G1 X{x_start} Y{y_end} Z{layer_height} F1500.0 E{extrude_len} ;Start priming wipe
  G1 X{x_end} Y{y_end} Z{layer_height} F5000.0
  G1 X{x_end} Y{y_start} Z{layer_height} F1500.0 E{extrude_len * 2} ;Finish priming wipe

  G1 Z5.0 E{(extrude_len * 2) - retract_len} F3000 ;Move Z axis up & retract
  G92 E0 ;Reset extruder

  RESTORE_GCODE_STATE NAME=nozzle_prime_state





# --------------------------------------------------------------------

# ------------------------- Bed Mesh Calibrate -----------------------

#[gcode_macro CALIBRATE]
#gcode:
#  G28
#  M118 Start clibrating...
#  BED_MESH_CALIBRATE
#  G0 X0 Y0 Z10 F6000
#  BED_MESH_PROFILE save=default
#  SAVE_CONFIG

[gcode_macro CALIBRATE]
gcode:
  G28
  M400
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=CALIBRATE
    # G90
    # G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G28
    BED_MESH_CALIBRATE
    #G90
    #G1 Z10 F240
    G1 X150 Y155 F6000
    BED_MESH_PROFILE save=default
    RESTORE_GCODE_STATE NAME=CALIBRATE MOVE=0
  {% endif %}

#--------------------------------------------------------------------



[gcode_macro G29]
gcode:
#  BED_MESH_CALIBRATE
  CALIBRATE
  G1 X151 Y115 Z5 F15000
